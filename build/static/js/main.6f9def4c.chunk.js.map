{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","NewPerson","name","number","persons","newPersons","newName","newNumber","setError","onSubmit","event","preventDefault","console","log","personObject","find","person","window","confirm","nperson","personService","then","response","data","setTimeout","concat","onChange","target","value","type","Search","showAll","searchTerm","PersonList","RemovePerson","catch","error","filter","toLocaleLowerCase","includes","map","onClick","Notification","message","className","App","useState","setPersons","setNewName","setSearchTerm","setNewNumber","setShowAll","errorMessage","setErrorMessage","useEffect","show","term","persons2","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f9def4c.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deleteP = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  deleteP: deleteP\n}","import React, { useState, useEffect } from 'react'\n\nimport personService from './services/persons'\n\nimport './App.css'\n\nconst NewPerson = ({ name, number, persons, newPersons, newName, newNumber, setError }) => {\n  const handleNewName = (event) => {\n    console.log(event.target.value)\n    newName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    console.log(event.target.value)\n    newNumber(event.target.value)\n  }\n\n  const AddName = (event) => {\n    event.preventDefault()\n    console.log(\"text:\", newName);\n    const personObject = {\n      name: name,\n      number: number,\n    }\n    if (!persons.find(person => { return person.name == name })) {\n      //onsole.log(persons.find(person=> person.name== newName));\n      newPersons(persons.concat(personObject))\n      personService\n        .create(personObject)\n        .then(response => {\n          newPersons(persons.concat(response.data))\n          console.log(\"POST response \", response)\n        })\n      newName('')\n      newNumber('')\n      setError(\n        `Added person '${personObject.name}' `)\n      setTimeout(() => {\n        setError(null)\n      },\n        5000)\n    } else {\n      if (window.confirm(\"Name already exist do you want to change the number?\")) {\n        const nperson = persons.find(person => { return person.name == name })\n        personService\n          .update(nperson.id, personObject)\n          .then(() => {\n            personService\n              .getAll()\n              .then((response) => {\n                newPersons(response.data)\n              })\n          })\n        setError(\n          `''Changed number of '${nperson.name}' `)\n        setTimeout(() => {\n          setError(null)\n        },\n          5000)\n      }\n    }\n  }\n\n  return (\n    <form onSubmit={AddName}>\n      <div>\n        name: <input onChange={handleNewName} />\n      </div>\n      <div>\n        number: <input onChange={handleNewNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Search = ({ showAll, searchTerm }) => {\n  const search = (event) => {\n    //console.log(event.target.value)\n    if (searchTerm == '') {\n      showAll(true)\n    } else {\n      showAll(false)\n    }\n\n    searchTerm(event.target.value)\n  }\n  return (\n    <div>\n      Search: <input onChange={search} />\n    </div>\n  )\n}\n\nconst PersonList = ({ persons, showAll, searchTerm, newPersons, setError}) => {\n  const RemovePerson = (event) => {\n    // if(window.confirm(\"Do you want to remove name\")){\n    console.log(event.target.value)\n    personService\n      .deleteP(event.target.value)\n      .then(() => {\n        personService\n          .getAll()\n          .then((response) => {\n            newPersons(response.data)\n          })\n      }).catch(error => {\n        setError(\n          `Note was already removed from server`\n        )\n        setTimeout(() => {\n          setError(null)\n        }, 5000)\n      }\n      )}\n  \n  const personsToShow = showAll ? persons : persons.filter(person => person.name.toLocaleLowerCase().includes(searchTerm.toLocaleLowerCase()))\n    return (\n      personsToShow.map(persons => {\n        return (\n          <p key={persons.name}>{persons.name}, {persons.number} <button value={persons.id} onClick={RemovePerson}>delete</button> </p>\n        )\n      }\n      )\n    )\n  }\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className=\"confirm\">\n        {message}\n      </div>\n    )\n  }\n\n  const App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [searchTerm, setSearchTerm] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n    useEffect(() => {\n\n      //console.log('effect')\n      personService\n        .getAll()\n        .then(response => {\n          //console.log('promise fulfilled')\n          // console.log(response.data);\n          setPersons(response.data)\n        })\n    }, []\n    )\n    //console.log('render', persons.length, 'persons')\n\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Notification message={errorMessage} />\n        <div>\n          <Search showAll={(show) => { setShowAll(show) }} searchTerm={(term) => { setSearchTerm(term) }} />\n          <NewPerson\n            name={newName}\n            number={newNumber}\n            persons={persons}\n            newPersons={(persons2) => {\n              setPersons(persons2)\n            }}\n            newName={(name) => {\n              setNewName(name)\n            }}\n            newNumber={(number) => {\n              setNewNumber(number)\n            }}\n            setError={(error) => {\n              setErrorMessage(error)\n            }} />\n        </div>\n\n        <h2>Numbers</h2>\n        <PersonList persons={persons} showAll={showAll} searchTerm={searchTerm} newPersons={(persons2) => { setPersons(persons2) }} setError={(error) => {\n              setErrorMessage(error)\n            }}/>\n\n      </div>\n    )\n  }\n\n  export default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}